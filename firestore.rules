rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the salon
    function isSalonOwner(salonId) {
      return isAuthenticated() && request.auth.uid == salonId;
    }
    
    // Helper function to check if user is a team member of the salon
    function isTeamMember(salonId) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/teamMembers/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/teamMembers/$(request.auth.uid)).data.salonId == salonId;
    }
    
    // Helper function to check if user has any team member record
    function hasTeamMemberRecord() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/teamMembers/$(request.auth.uid));
    }
    
    // Helper function to check if user has access to salon data
    function hasSalonAccess(salonId) {
      return isSalonOwner(salonId) || isTeamMember(salonId);
    }

    // Salon documents - simplified access rules
    match /salons/{salonId} {
      // Salon owners can always access their own salon (user ID matches document ID)
      allow read, write: if isAuthenticated() && request.auth.uid == salonId;
      
      // Team members can read their salon (check if user is a team member of this salon)
      allow read: if isAuthenticated() && 
        exists(/databases/$(database)/documents/teamMembers/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/teamMembers/$(request.auth.uid)).data.salonId == salonId;
      
      // Public access for booking pages (anyone can read if slug exists)
      allow read: if resource.data.slug != null;
      
      // Allow public queries for booking page searches
      allow list: if true;
    }

    // Providers - salon owners and team members can manage
    match /providers/{providerId} {
      allow read, write: if hasSalonAccess(resource.data.salonId);
      allow create: if isAuthenticated() && 
        request.resource.data.salonId != null && 
        hasSalonAccess(request.resource.data.salonId);
      
      // Allow public read access for booking pages
      allow read: if resource.data.salonId != null && 
        exists(/databases/$(database)/documents/salons/$(resource.data.salonId)) &&
        get(/databases/$(database)/documents/salons/$(resource.data.salonId)).data.slug != null;
    }

    // Services - salon owners and team members can manage
    match /services/{serviceId} {
      allow read, write: if hasSalonAccess(resource.data.salonId);
      allow create: if isAuthenticated() && 
        request.resource.data.salonId != null && 
        hasSalonAccess(request.resource.data.salonId);
      
      // Explicit rule for team members to read their salon's services
      allow read: if isAuthenticated() && 
        hasTeamMemberRecord() &&
        get(/databases/$(database)/documents/teamMembers/$(request.auth.uid)).data.salonId == resource.data.salonId;
      
      // Allow public read access for booking pages
      allow read: if resource.data.salonId != null && 
        exists(/databases/$(database)/documents/salons/$(resource.data.salonId)) &&
        get(/databases/$(database)/documents/salons/$(resource.data.salonId)).data.slug != null;
    }

    // Booking requests - salon owners and team members can manage their salon's requests
    match /bookingRequests/{requestId} {
      allow read, write: if hasSalonAccess(resource.data.salonId);
      allow create: if request.resource.data.salonId != null;
      
      // Explicit rule for team members to read their salon's requests
      allow read: if isAuthenticated() && 
        hasTeamMemberRecord() &&
        get(/databases/$(database)/documents/teamMembers/$(request.auth.uid)).data.salonId == resource.data.salonId;
    }

    // Team members - salon owners can manage their team, team members can read their own record
    match /teamMembers/{memberId} {
      allow read: if isAuthenticated() && (
        isSalonOwner(resource.data.salonId) || 
        request.auth.uid == memberId
      );
      allow write: if isSalonOwner(resource.data.salonId);
      allow create: if isAuthenticated() && 
        request.resource.data.salonId != null && 
        isSalonOwner(request.resource.data.salonId);
    }

    // Invitations - salon owners can manage invitations
    match /invitations/{invitationId} {
      allow read, write: if isSalonOwner(resource.data.salonId);
      allow create: if isAuthenticated() && 
        request.resource.data.salonId != null && 
        isSalonOwner(request.resource.data.salonId);
    }

    // Loyalty programs - salon owners and team members can manage
    match /loyaltyPrograms/{programId} {
      allow read, write: if hasSalonAccess(resource.data.salonId);
      allow create: if isAuthenticated() && 
        request.resource.data.salonId != null && 
        hasSalonAccess(request.resource.data.salonId);
    }

    // Customer passes - salon owners and team members can manage
    match /customerPasses/{passId} {
      allow read, write: if hasSalonAccess(resource.data.salonId);
      allow create: if isAuthenticated() && 
        request.resource.data.salonId != null && 
        hasSalonAccess(request.resource.data.salonId);
    }

    // Visit records - salon owners and team members can manage
    match /visitRecords/{recordId} {
      allow read, write: if hasSalonAccess(resource.data.salonId);
      allow create: if isAuthenticated() && 
        request.resource.data.salonId != null && 
        hasSalonAccess(request.resource.data.salonId);
    }

    // Clients - salon owners and team members can manage
    match /clients/{clientId} {
      allow read, write: if hasSalonAccess(resource.data.salonId);
      allow create: if isAuthenticated() && 
        request.resource.data.salonId != null && 
        hasSalonAccess(request.resource.data.salonId);
    }

    // Shift change requests - salon owners and team members can manage
    match /shiftChangeRequests/{requestId} {
      allow read, write: if hasSalonAccess(resource.data.salonId);
      allow create: if isAuthenticated() && 
        request.resource.data.salonId != null && 
        hasSalonAccess(request.resource.data.salonId);
    }

    // Session tracking - allow creation for analytics
    match /sessionTracking/{sessionId} {
      allow create: if true; // Allow public creation for analytics
      allow read, write: if isAuthenticated() && 
        resource.data.salonId != null && 
        hasSalonAccess(resource.data.salonId);
    }
  }
}